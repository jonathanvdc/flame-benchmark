// This is a D# port of the array-reverse performance benchmark by pynewb.
// Original source code available at:
// https://github.com/unixpickle/Benchmarks/tree/master/array-reverse/cs

using System;

namespace ArrayReverse {

  public module Program {

    public void reverseArray(int[] array) {
      for (int i = 0; i < array.Length / 2; i++) {
        int lastIdx = array.Length - i - 1;
        int lastValue = array[lastIdx];
        array[lastIdx] = array[i];
        array[i] = lastValue;
      }
    }

    /*public void Main(string[] args) {
      if (args.Length != 2) {
        Console.Error.WriteLine("Usage: mono Program <size> <iterations>");
        Environment.Exit(1);
      }

      int[] myList = new int[Convert.ToInt32(args[0])];
      for (int i = 0; i < myList.Length; i++) {
        myList[i] = i;
      }
      int count = Convert.ToInt32(args[1]);
      for (int i = 0; i < count; i++) {
        reverseArray(myList);
      }
    }*/

    public void Main(int InputSize) {
      int[] myList = new int[2000];
      for (int i = 0; i < myList.Length; i++) {
        myList[i] = i;
      }
      for (int i = 0; i < InputSize; i++) {
        reverseArray(myList);
      }
    }
  }
}
