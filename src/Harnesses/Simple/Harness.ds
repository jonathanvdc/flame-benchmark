using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Threading;

/// <summary>
/// A simple CLR harness, based on StackOverflow answer:
/// http://stackoverflow.com/questions/1047218/benchmarking-small-code-samples-in-c-can-this-implementation-be-improved
/// </summary>
public module Harness
{
    // Pipeline:
    // StartBenchmark -> ... -> EndBenchmark

    public Stopwatch StartBenchmark()
    {
        // Run at highest priority to minimize fluctuations caused by other processes/threads

        // This seems to throw a runtime exception on mono.
        // Process.GetCurrentProcess().PriorityClass = ProcessPriorityClass.High;
        Thread.CurrentThread.Priority = ThreadPriority.Highest;

        var watch = new Stopwatch();

        // clean up
        GC.Collect();
        GC.WaitForPendingFinalizers();
        GC.Collect();

        watch.Start();
        return watch;
    }

    public void EndBenchmark(Stopwatch Watch)
    {
        Watch.Stop();
        Console.WriteLine("Time Elapsed: {0} ms", Watch.Elapsed.TotalMilliseconds);
    }
}
